input {  
        file {  
                type => "uSG_gateway_access"  
                path => ["/usr/local/elk/elklog/nginxlog/log0/uSG_gateway_elk.log"]  
        }
} 
filter {
	ruby {
		init => "@kname = ['http_clientip','http_ServiceName','http_uid','http_sid','time_local','request','status','body_bytes_sent','connection_requests','remote_addr','http_referer','http_user_agent','request_body','request_time','msec']"
		code => "new_event = LogStash::Event.new(Hash[@kname.zip(event.get('message').split('	'))])
				new_event.remove('@timestamp')
				event.append(new_event)"
	}
	if [request] {
		ruby {
			init => "@kname = ['method','uri','verb']"
			code => "new_event = LogStash::Event.new(Hash[@kname.zip(event.get('request').split(' '))])
			new_event.remove('@timestamp')
			event.append(new_event)
		"
		}
	}
	mutate {
		convert => ["body_bytes_sent" , "integer", "content_length", "integer", "upstream_response_time", "float","request_time", "float"]
	}
        grok {
		match => [ "message", "%{IPORHOST:clientip}	%{USER}	%{USER}	%{USER}	\[%{HTTPDATE:timestamp}\]"]
	}
	date {
		match => [ "timestamp", "dd/MMM/YYYY:HH:mm:ss Z" ]
		locale => "en"
	}
        geoip {
		source => "clientip"
    	}
	useragent {
    		source => "http_user_agent"
    		target => "useragent"
  	}
}
output {
        redis {
                host => "10.10.45.200"
                data_type => "list"
                key => "elk_frontend_access:redis"
                port=>"5379"
        }
}
